---
- name: Check if helmfile-releases script exists
  ansible.builtin.stat:
    path: "{{ playbook_dir }}/../../scripts/helmfile-releases.sh"
  register: helmfile_script
  tags:
    - all
    - addons
    - never

- name: Fail if script is not found
  ansible.builtin.fail:
    msg: "Script helmfile-releases.sh not found in {{ playbook_dir }}/../../scripts/"
  when: not helmfile_script.stat.exists
  tags:
    - all
    - addons
    - never

- name: Make script executable
  ansible.builtin.file:
    path: "{{ playbook_dir }}/../../scripts/helmfile-releases.sh"
    mode: "0755"
  tags:
    - all
    - addons
    - never

- name: Install or update release cilium
  ansible.builtin.command:
    cmd: "{{ playbook_dir }}/../../scripts/helmfile-releases.sh cilium --auto-apply"
    chdir: "{{ playbook_dir }}/../.."
  register: helmfile_single_result
  delegate_to: localhost
  changed_when: helmfile_single_result.rc == 0
  failed_when: helmfile_single_result.rc != 0
  tags:
    - all
    - addons
    - never

- name: Install or update release metallb
  ansible.builtin.command:
    cmd: "{{ playbook_dir }}/../../scripts/helmfile-releases.sh metallb --auto-apply"
    chdir: "{{ playbook_dir }}/../.."
  register: helmfile_single_result
  changed_when: helmfile_single_result.rc == 0
  failed_when: helmfile_single_result.rc != 0
  tags:
    - all
    - addons
    - never

- name: Install or update all releases
  ansible.builtin.shell:
    cmd: "{{ playbook_dir }}/../../scripts/helmfile-releases.sh --auto-apply"
    chdir: "{{ playbook_dir }}/../../"
  register: helmfile_output
  changed_when: helmfile_output.rc == 0
  failed_when: helmfile_output.rc != 0
  when: release_name is not defined
  tags:
    - all
    - addons
    - never
